import pandas as pd
import pymysql
from sqlalchemy import create_engine
import sys
import os
import re
import glob
input_path = 'C:/Users/xuzhen/hospital_list/'
output_file = 'C:/Users/xuzhen/hospital_list/hospital_all.csv'
all_files = glob.glob(os.path.join(input_path,'中国医疗保险网*.csv'))
import time
#构造循环读取所有csv文件
start_time = time.time()  #计算程序运行时间

def generate_mysql():
    conn = pymysql.connect(
        host='localhost',
        user='root',
        password='mysqlpswd',
        port=3306,
        charset = 'UTF8MB4',  
        db = 'hospital_list')
    cursor = conn.cursor()

    sql = 'CREATE TABLE IF NOT EXISTS hospital_list_table (hospital_name VARCHAR(40), hospital_name_new VARCHAR(30), city VARCHAR(15),\
    Provinces VARCHAR(15), Cities VARCHAR(15), hospital_tier VARCHAR(10) ,address VARCHAR(35) , phone VARCHAR(30), email VARCHAR(30),\
    website VARCHAR(40), PRIMARY KEY (hospital_name_new))'
    # hospital_list是要在数据库中建立的表，用于存放数据
    
    cursor.execute(sql)
    conn.close()
    
def get_one_file(i):
    file = glob.glob(os.path.join(input_path,'中国医疗保险网'+str(i)+'.xls'))
#    print(file)
    all_dataframes = []
    data_frame = pd.read_excel(file[0], sheet_name = 0, header = 0)
    all_dataframes.append(data_frame)
    data_frame_concat = pd.concat(all_dataframes, axis=0, ignore_index=True)
    data_frame_concat.replace(',',';')
    data_frame_concat.to_csv(output_file,mode='a', header=False, encoding='utf_8_sig',na_rep='NA',index=0)
#How to rename pd: https://chartio.com/resources/tutorials/how-to-rename-columns-in-the-pandas-python-library/    
#rename将中文名改为英文名，便于存储到mysql及后期进行数据分析    
    data_frame_concat.columns=['hospital_name', 'city', 'hospital_tier', 'specialties', 'address', 'phone',\
                                'email', 'website']

    data_frame_concat = data_frame_concat.drop('specialties', axis=1)
    
    print(len(data_frame_concat))
    print(type(data_frame_concat))
    print(type(all_dataframes))
    print('file {} city:'.format(i), '\n', data_frame_concat['city'].values)
    prov_list = []
    city_list = []
    for j in range(0,20):
#         print(data_frame_concat['city'][j].split('-'))
#         print((data_frame_concat['city'][j].split('-'))[0])
#         print((data_frame_concat['city'][j].split('-'))[1])
        prov_list.append(data_frame_concat['city'][j].split('-')[0])
        city_list.append(data_frame_concat['city'][j].split('-')[1])
#     print(prov_list)
#     print(city_list)
    data_frame_concat['Provinces'] = pd.DataFrame(prov_list)
    data_frame_concat['Cities'] = pd.DataFrame(city_list)
    print(data_frame_concat['Provinces'])
    print(data_frame_concat['Cities'])
    
    
# 利用正则表达式去掉（后的字符串
    df_ = []
    for j in data_frame_concat['hospital_name']:
        a = re.sub(u"\\（.*?\\）|\\{.*?}|\\[.*?]", "", j)
        print(a)
        df_.append(a)
    data_frame_concat['hospital_name_new'] = df_
    print(data_frame_concat, '\n')
    return data_frame_concat

     
def write_to_sql(data_frame_concat, db = 'hospital_list'):
    engine = create_engine('mysql+pymysql://root:mysqlpswd@localhost:3306/{0}?charset=UTF8MB4'.format(db))
    try:
        # df = pd.read_csv(df)
        data_frame_concat.to_sql('hospital_list_table',con = engine,if_exists='append',index=False)
        # append表示在原有表基础上增加，但该表要有表头(header)
    except Exception as e:
        print(e)

        
def main(files):
        
    generate_mysql()
    global i
    global counter
    for i in range(1,files):  
        counter = 0
        t5 = time.time()
        data_frame_concat = get_one_file(i)
        write_to_sql(data_frame_concat)
    
# # 单进程
if __name__ == '__main__':      
    main(1529)    #main(178)
    endtime = time.time()-start_time    
    print('程序运行了%.2f秒' %endtime)   

